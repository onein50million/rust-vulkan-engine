#version 450
layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

layout(set = 0, binding = 0, r8ui) uniform uimage3D inImage;
layout(set = 0, binding = 1, r8ui) writeonly uniform uimage3D outImage;

layout(push_constant) uniform PushConstants{
    uint current_iteration;
    uint max_iterations;
} pushConstant;

void main(){

    float min_distance = 1.0/0.0;

    vec3 output_image_size = imageSize(outImage);
    int layer_size = int(output_image_size.y) / int(pushConstant.max_iterations);
    ivec3 current_pixel = ivec3(gl_GlobalInvocationID.xyz) + ivec3(0,layer_size * int(pushConstant.current_iteration),0);

    for(int x = 0; x < output_image_size.x; x++){
        for(int y = 0; y < output_image_size.y; y++){
            for(int z = 0; z < output_image_size.z; z++){
                float voxel_value = imageLoad(inImage, ivec3(x,y,z)).r;
                if (voxel_value > 0.5){
                    min_distance = min(min_distance, distance(current_pixel, vec3(x,y,z)));
                }
            }
        }
    }
    imageStore(outImage, ivec3(current_pixel),ivec4(min_distance));

}